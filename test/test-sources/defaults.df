(section 'filter'
  (version)
  (define 'code' (param)
    (loop (varuint32) (eval 'code.function'))
  )
  (define 'code.address' (param)
    (varuint32)
    (varuint32)
  )
  (define 'code.br_table' (param)
    (uint8)
    (loop (varuint32) (uint32))
    (uint32)
  )
  (define 'code.br_target' (param)
    (uint8)
    (varuint32)
  )
  (define 'code.call_args' (param)
    (varuint32)
    (varuint32)
  )
  (define 'code.function' (param)
    (block
      (loop (varuint32) (eval 'code.local'))
      (loop.unbounded
        (eval 'code.opcode')
        (eval 'code.inst')
      )
    )
  )
  (define 'code.local' (param)
    (varuint32)
    (uint8)
  )
  (define 'code.inst' (param)
    (switch (read)
      (void)
      (case (u8.const 0x6) (eval 'code.br_target'))
      (case (u8.const 0x7) (eval 'code.br_target'))
      (case (u8.const 0x8) (eval 'code.br_table'))
      (case (u8.const 0x9) (uint8))
      (case (u8.const 0x10) (varint32))
      (case (u8.const 0x11) (varint64))
      (case (u8.const 0x12) (uint64))
      (case (u8.const 0x13) (uint32))
      (case (u8.const 0x14) (varuint32))
      (case (u8.const 0x15) (varuint32))
      (case (u8.const 0x16) (eval 'code.call_args'))
      (case (u8.const 0x17) (eval 'code.call_args'))
      (case (u8.const 0x18) (eval 'code.call_args'))
      (case (u8.const 0x20) (eval 'code.address'))
      (case (u8.const 0x21) (eval 'code.address'))
      (case (u8.const 0x22) (eval 'code.address'))
      (case (u8.const 0x23) (eval 'code.address'))
      (case (u8.const 0x24) (eval 'code.address'))
      (case (u8.const 0x25) (eval 'code.address'))
      (case (u8.const 0x26) (eval 'code.address'))
      (case (u8.const 0x27) (eval 'code.address'))
      (case (u8.const 0x28) (eval 'code.address'))
      (case (u8.const 0x29) (eval 'code.address'))
      (case (u8.const 0x2a) (eval 'code.address'))
      (case (u8.const 0x2b) (eval 'code.address'))
      (case (u8.const 0x2c) (eval 'code.address'))
      (case (u8.const 0x2d) (eval 'code.address'))
      (case (u8.const 0x2e) (eval 'code.address'))
      (case (u8.const 0x2f) (eval 'code.address'))
      (case (u8.const 0x30) (eval 'code.address'))
      (case (u8.const 0x31) (eval 'code.address'))
      (case (u8.const 0x32) (eval 'code.address'))
      (case (u8.const 0x33) (eval 'code.address'))
      (case (u8.const 0x34) (eval 'code.address'))
      (case (u8.const 0x35) (eval 'code.address'))
      (case (u8.const 0x36) (eval 'code.address'))
    )
  )
  (define 'code.opcode' (param) (uint8))
  (define 'data' (param)
    (loop (varuint32) (eval 'data.segment'))
  )
  (define 'data.segment' (param)
    (varuint32)
    (loop (varuint32) (uint8))
  )
  (define 'export' (param)
    (loop (varuint32) (eval 'export.entry'))
  )
  (define 'export.entry' (param)
    (varuint32)
    (eval 'export.symbol')
  )
  (define 'export.symbol' (param)
    (loop (varuint32) (uint8))
  )
  (define 'function' (param)
    (loop (varuint32) (varuint32))
  )
  (define 'import' (param)
    (loop (varuint32) (eval 'import.entry'))
  )
  (define 'import.entry' (param)
    (varuint32)
    (eval 'import.symbol')
    (eval 'import.symbol')
  )
  (define 'import.symbol' (param)
    (loop (varuint32) (uint8))
  )
  (define 'memory' (param)
    (varuint32)
    (varuint32)
    (uint8)
  )
  (define 'name' (param)
    (loop (varuint32) (eval 'name.function'))
  )
  (define 'name.function' (param)
    (eval 'name.symbol')
    (loop (varuint32) (eval 'name.symbol'))
  )
  (define 'name.symbol' (param)
    (loop (varuint32) (uint8))
  )
  (define 'start' (param) (varuint32))
  (define 'table' (param)
    (loop (varuint32) (varuint32))
  )
  (define 'type' (param)
    (loop (varuint32)
      (uint8)
      (loop (varuint32) (uint8))
      (loop (varuint32) (uint8))
    )
  )
)

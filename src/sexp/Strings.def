//
// Copyright 2016 WebAssembly Community Group participants
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Defines predefined indices for symbols in decompressor s-expressions

//#define X(tag, name)
#define DEFAULT_SEXP_STRINGS_TABLE
'code'
'code.address'
'code.br_table'
'code.br_table.size'
'code.br_target'
'code.br_target.default_depth'
'code.br_target.
'code.end.section'
'code.function'
'code.function.begin'
'code.function.bytes'
'code.function.end'
'code.funtion.local'
'code.function.num.locals'
'code.num.functions'
'code.opcode'
'code.inst'
'code.inst.block'
'code.inst.br'
'code.inst.br_if'
'code.inst.br_table'
'code.inst.call'
'code.inst.call_indirect'
'code.inst.current_memory'
'code.inst.drop'
'code.inst.else'
'code.inst.end'
'code.inst.i32.clz'
'code.inst.f32.const'
'code.inst.i32.ctz'
'code.inst.f32.load'
'code.inst.f32.store'
'code.inst.f64.const'
'code.inst.f64.load'
'code.inst.f64.store'
'code.inst.get_global'
'code.inst.get_local'
'code.inst.grow_memory'
'code.inst.if'
'code.inst.i32.add'
'code.inst.i32.and'
'code.inst.i32.const'
'code.inst.i32.div_s'
'code.inst.i32.div_u'
'code.inst.i32.eq'
'code.inst.i32.eqz'
'code.inst.i32.ge_s'
'code.inst.i32.ge_u'
'code.inst.i32.gt_s'
'code.inst.i32.gt_u'
'code.inst.i32.le_s'
'code.inst.i32.le_u'
'code.inst.i32.load'
'code.inst.i32.load16_s'
'code.inst.i32.load16_u'
'code.inst.i32.load8_s'
'code.inst.i32.load8_u'
'code.inst.i32.lt_s'
'code.inst.i32.lt_u'
'code.inst.i32.mul'
'code.inst.i32.ne'
'code.inst.i32.or'
'code.inst.i32.popcnt'
'code.inst.i32.rem_s'
'code.inst.i32.rem_u'
'code.inst.i32.rotl'
'code.inst.i32.rotr'
'code.inst.i32.shl'
'code.inst.i32.shr_s'
'code.inst.i32.shr_u'
'code.inst.i32.store'
'code.inst.i32.store16'
'code.inst.i32.store8'
'code.inst.i32.sub'
'code.inst.i32.xor'

'code.inst.i64.add'
'code.inst.i64.const'
'code.inst.i64.load'
'code.inst.i64.load16_s'
'code.inst.i64.load16_u'
'code.inst.i64.load32_s'
'code.inst.i64.load32_u'
'code.inst.i64.load8_s'
'code.inst.i64.load8_u'
'code.inst.i64.store'
'code.inst.i64.store16'
'code.inst.i64.store32'
'code.inst.i64.store8'
'code.inst.i64.sub'
'code.inst.loop'
'code.inst.nop'
'code.inst.return'
'code.inst.select'
'code.inst.set_global'
'code.inst.set_local'
'code.inst.tee_local'
'code.inst.unreachable'

'filter'

'code.inst.i64.mul'
'code.inst.i64.div_s'
'code.inst.i64.div_u'
'code.inst.i64.rem_s'
'code.inst.i64.rem_u'
'code.inst.i64.and'
'code.inst.i64.or'
'code.inst.i64.xor'
'code.inst.i64.shl'
'code.inst.i64.shr_u'
'code.inst.i64.shr_s'
'code.inst.i64.rotr'
'code.inst.i64.rotl'
'code.inst.i64.eq'
'code.inst.i64.ne'
'code.inst.i64.lt_s'
'code.inst.i64.le_s'
'code.inst.i64.lt_u'
'code.inst.i64.le_u'
'code.inst.i64.gt_s'
'code.inst.i64.ge_s'
'code.inst.i64.gt_u'
'code.inst.i64.ge_u'
'code.inst.i64.clz'
'code.inst.i64.ctx'
'code.inst.i64.popcnt'
'code.inst.f32.add'
'code.inst.f32.sub'
'code.inst.f32.mul'
'code.inst.f32.div'
'code.inst.f32.min'
'code.inst.f32.max'
'code.inst.f32.abs'
'code.inst.f32.neg'
'code.inst.f32.copysign
'code.inst.f32.ceil'
'code.inst.f32.floor'
'code.inst.f32.trunc'
'code.inst.f32.nearest'
'code.inst.f32.sqrt'
'code.inst.f32.eq'
'code.inst.f32.ne'
'code.inst.f32.lt'
'code.inst.f32.le'
'code.inst.f32.gt'
'code.inst.f32.ge'
'code.inst.f64.add'
'code.inst.f64.sub'
'code.inst.f64.mul'
'code.inst.f64.div'
'code.inst.f64.min'
'code.inst.f64.max'
'code.inst.f64.abs'
'code.inst.f64.neg'
'code.inst.f64.copysign'
'code.inst.f64.ceil'
'code.inst.f64.floor'
'code.inst.f64.trunc'
'code.inst.f64.nearest'
'code.inst.f64.sqrt'
'code.inst.f64.eq'
'code.inst.f64.ne'
'code.inst.f64.lt'
'code.inst.f64.le'
'code.inst.f64.gt'
'code.inst.f64.ge'
'code.inst.i32.trunc_s/f32'
'code.inst.i32.trunc_s/f64'
'code.inst.i32.trunc_u/f32'
'code.inst.i32.trunc_u/f64'
'code.inst.i32.wrap/i64'
'code.inst.i64.trunc_s/f32'
'code.inst.i64.trunc_s/f64'
'code.inst.i64.trunc_u/f32'
'code.inst.i64.trunc_u/f64'
'code.inst.i64.extend_s/i32'
'code.inst.i64.extend_u/i32'
'code.inst.f32.convert_s/i32'
'code.inst.f32.convert_u/i32'
'code.inst.f32.convert_s/i64'
'code.inst.f32.convert_u/i64'
'code.inst.f32.demote/f64'
'code.inst.f32.reinterpret/i32'
'code.inst.f64.convert_s/i32'
'code.inst.f64.convert_u/i32'
'code.inst.f64.convert_s/i64'
'code.inst.f64.convert_u/i64'
'code.inst.f64.promote/f32'
'code.inst.f64.reinterpret/i64'
'code.inst.i32.reinterpret/f32'
'code.inst.i64.reinterpret/f64'
'code.function.local'
'data'
'data.num.segments'
'data.segment'
'data.end.segment'
'$init_expr'
'data.num.segment.bytes'
'element'
'element.num.elements'
'element.segment'
'element.end.section'
'element.segment.num.elements'
'element.segment.element'
'export'
'export.num.entries'
'export.entry'
'export.end.section'
'name.symbol'
'export.entry'
'function'
'function.num.signatures'
'function.signature'
'function.end.section'
'global'
'global.num.variables'
'global.variable.header'
'global.variable'
'global.end.section'
'import'
'import.num.entries'
'import.entry'
'import.end.section'
'name.symbol'
'import.entry.function'
'$resizable_limits'
'import.entry.table'
'import.entry.memory'
'import.entry.global'
'$init_expr'
'$init.expr.opcode'
'$init_expr.i32.const'
'$init_expr.i64.const'
'$init_expr.f64.const'
'$init_expr.f32.const
'$init_expr.get_global'
'$init_expr.end'
'$init_expr.define'
'memory'
'memory.num.decls'
'$resizable_limits'
'memory.end.section'
'name'
'name.num.functions'
'name.function'
'name.end.section'
'name.symbol'
'name.function.num.locals'
'name.symbol.length'
'$resizable_limits.initial.length'
'$resizable_limits.maximum.length'
'start'
'start.function'
'start.end.section'
'table'
'table.num.entries'
'$resizable_limits'
'table.entry'
'table.end.section'
'type'
'type.num.signatures'
'type.num.params'
'type.param'
'type.num.returns'
'type.return'
'type.end.section'

# Copyright 2017 WebAssembly Community Group participants
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Defines the CAST algorithm for reading/writing "Compressed binary
# integer sequence" ("cism") file.

(include 'cism0x0-lits.cast')

(name 'cism')
(header (u32.const 0x6d736163) (u32.const 0x0))
(header.read (u32.const 0x6d736963) (u32.const 0x0))

(define 'file' (locals 1)
  (loop.unbounded
    (eval 'process' (eval 'categorize' (eval 'opcode'))) 
  )
)

(define 'process' (values 1)
  (switch (param 0)
    (case (u32.const 16774)
      (table (param 0)
        (loop (read (varuint64)) (varuint64))
      )
    )
    (case (u32.const 16775)
      (table (param 0)
        (loop (read (varint64)) (varint64))
      )
    )
    (case (u32.const 16768) (=> 'block.enter'))
    (case (u32.const 16769) (=> 'block.exit'))
    (case (u32.const 16770) (=> 'align'))
    (case (u32.const 16771) (uint8))
    (case (u32.const 32772) (varuint64))
    (case (u32.const 32773) (varint64))
  )
)

(define 'categorize' (values 1)
   (param 0)
)

(define 'opcode'
   (varuint64)
)


